# Runtime params
#===================================
train: False # train new or existing model for each channel
predict: True # generate new predicts or, if False, use predictions stored locally
use_id: "2021-05-27_09.34.59_ESN"

model_type: "ESN" # neural network type LSTM, CNN, ESN


##### da rivedere
load_hp: True
hp_and_weights_id: "2021-05-26_18.12.38" # hyperparameters configuration folder
logs_id: "2021-05-27_09.34.59_ESN"

save_graphs: True # if True it shows and saves the graphs for loss and validation loss


# number of values to evaluate in each batch
batch_size: 70

# number of trailing batches to use in error calculation
window_size: 30

# Columns headers for output file
header: ["run_id", "chan_id", "spacecraft", "num_anoms", "anomaly_sequences", "class", "true_positives", 
        "false_positives", "false_negatives", "tp_sequences", "fp_sequences", "gaussian_p-value", "num_values",
        "normalized_error", "eval_time", "scores"]

# determines window size used in EWMA smoothing (percentage of total values for channel)
smoothing_perc: 0.05

# number of values surrounding an error that are brought into the sequence (promotes grouping on nearby sequences
error_buffer: 100

# LSTM ESN parameters
# ==================================
loss_metric: 'mse'
optimizer: 'adam'
validation_split: 0.2
dropout: 0.3
lstm_batch_size: 64
esn_lr: 1e-2

# maximum number of epochs allowed (if early stopping criteria not met)
epochs: 35
esn_epochs: 35

# network architecture [<neurons in hidden layer>, <neurons in hidden layer>]
# Size of input layer not listed - dependent on evr modules and types included (see 'evr_modules' and 'erv_types' above)
layers: [80,80]

# Number of consequetive training iterations to allow without decreasing the val_loss by at least min_delta 
patience: 10
esn_patience: 5
min_delta: 0.0003

# num previous timesteps provided to model to predict future values
l_s: 250

# number of steps ahead to predict
n_predictions: 10

# Error thresholding parameters
# ==================================

# minimum percent decrease between max errors in anomalous sequences (used for pruning)
p: 0.13

#altri threshold da provare
#p: 0.09
#p: 0.05
